# -*- coding: utf-8 -*-
"""root

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KWD4fAUzH52yDAS-bW7UAAQnf8Shh7kF
"""

def bisection(f, a, b, tol, max_iters=100):

    if f(a) * f(b) >= 0:
        raise ValueError("f(a) and f(b) should have opposite signs.")

    iter_count = 0
    while (b - a) / 2.0 > tol:
        if iter_count >= max_iters:
            raise RuntimeError("Maximum iterations hit in Bisection method.")
        midpoint = (a + b) / 2.0
        if f(midpoint) == 0:
            return midpoint
        elif f(a) * f(midpoint) < 0:
            b = midpoint
        else:
            a = midpoint
        iter_count += 1
    return (a + b) / 2.0


def newton(f, f_prime, x0, tol, max_iters=100):
    for i in range(max_iters):
        x1 = x0 - f(x0) / f_prime(x0)
        if abs(x1 - x0) < tol:
            return x1
        x0 = x1
    raise RuntimeError("Maximum iterations hit in Newton's method.")